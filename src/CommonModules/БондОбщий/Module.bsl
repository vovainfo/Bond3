
#Область ПрограммныйИнтерфейс

// Получение ссылки на тикер на сервере биржи
// 
// Параметры:
//  SECID - Строка - SECID тикера
//
// Возвращаемое значение:
//  Строка - URL
Функция СсылкаНаТикер(SECID) Экспорт
	URL = СтрШаблон(
			"%1/%2.json?%3",
			"https://iss.moex.com/iss/securities",
			SECID,
			"iss.meta=off&iss.only=description,boards&primary_board=1&iss.json=extended"
		);
	Возврат URL;	
КонецФункции

// Загрузка данных тикера (и акции и etf и облигации) с MOEX.
// 
// Параметры:
//  SECID - Строка - SECID тикера
//  ЭлементОбъект - СправочникОбъект - Текущий элемент справочника
Процедура ЗагрузитьТикерС_MOEX(SECID, ЭлементОбъект) Экспорт
	Тикер = ?(SECID=Неопределено, ЭлементОбъект.SECID, SECID);
	
//	URL = СтрШаблон(
//			"%1/%2.json?%3",
//			"https://iss.moex.com/iss/securities",
//			Тикер,
//			"iss.meta=off&iss.only=description,boards&primary_board=1&iss.json=extended"
//		);
	URL = СсылкаНаТикер(Тикер);

//	ДопПараметры = КлиентHTTPКлиентСервер.НовыеДополнительныеПараметры();
//	ДопПараметры.Вставить("АгентПользователя", "Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36");
	
	//@skip-check bsl-legacy-check-returning-type-for-environment
//	Ответ = КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДопПараметры).Получить(URL, , ДопПараметры);

	ПараметрыПреобразованияJSON = Новый Структура("ПрочитатьВСоответствие", Ложь);
	ДополнительныеПараметры = Новый Структура("ПараметрыПреобразованияJSON", ПараметрыПреобразованияJSON);
	
	Ответ = КоннекторHTTP.GetJson(URL,,ДополнительныеПараметры);
	
	ТелоОтвета = Ответ[1];
	РеквизитыОбъекта = ЭлементОбъект.Метаданные().Реквизиты; 
	
	Если НЕ ТелоОтвета.Свойство("description") ИЛИ ТелоОтвета.description.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru='Ошибка получения данных с биржи. Тикер не найден'");
	КонецЕсли;
	
	ОчиститьОбъект(ЭлементОбъект);
	
	Для Каждого эл Из ТелоОтвета.description Цикл
		Если РеквизитыОбъекта.Найти(эл.name) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если эл.type = "date" Тогда
			ЭлементОбъект[эл.name] = ПрочитатьДатуJSON(эл.value, ФорматДатыJSON.ISO);
		ИначеЕсли эл.type = "boolean" Тогда
			ЭлементОбъект[эл.name] = ?(эл.value = "1", Истина, Ложь);		
		Иначе
			ЭлементОбъект[эл.name] = эл.value;
		КонецЕсли;
	КонецЦикла;
	ЭлементОбъект.Наименование = ЭлементОбъект.NAME;
	
	ЭлементОбъект.BOARDID = ТелоОтвета.boards[0].boardid;	
КонецПроцедуры


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Очистить значения всех реквизитов элемента справочника
// 
// Параметры:
//  ЭлементОбъект - СправочникОбъект - Элемент справочника
Процедура ОчиститьОбъект(ЭлементОбъект)
	РеквизитыОбъекта = ЭлементОбъект.Метаданные().Реквизиты;
	Для Каждого Реквизит Из РеквизитыОбъекта Цикл
		ЭлементОбъект[Реквизит.Имя] = Неопределено;		
	КонецЦикла; 
	Для Каждого ТЧ Из ЭлементОбъект.Метаданные().ТабличныеЧасти Цикл
		ЭлементОбъект[ТЧ.Имя].Очистить();
	КонецЦикла;
КонецПроцедуры
#КонецОбласти
